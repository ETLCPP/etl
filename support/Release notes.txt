===============================================================================
14.35.1
Fixed incorrect result for negative float to string.

===============================================================================
14.35.0
Changed namespace for alternate ETL's STL support.

===============================================================================
14.34.1
Fixed strict aliasing bug for -O3 optimisation in etl::pool

===============================================================================
14.34.0
Fix alternate STL utility.h for ARM6
Added ARM7 profiles.

===============================================================================
14.33.0
Updated unit tests to C++17

===============================================================================
14.32.0
Added Platform IO example

===============================================================================
14.31.2
More PIO json tweaks

===============================================================================
14.31.1
Fix error in PIO json

===============================================================================
14.31.0
Removed C timer library

===============================================================================
14.30.0
Allow conan's etl version metadata to automatically update via git tags

===============================================================================
14.29.4
Fixed unordered_map iterator operator* return type

===============================================================================
14.29.3
Minor updatess for etl::delegate

===============================================================================
14.29.2
Fixed incorrect results returned from pointers for atomic_gcc_sync

===============================================================================
14.29.1
Added #include "stl/utility.h" to etl::optional

===============================================================================
14.29.0
Added const parameters and ETL_CONST_EXPR to etl::array_view

===============================================================================
14.28.3
Removed redundant etl::const_array_view

===============================================================================
14.28.2
Various fixes.
void assign(const_pointer, size_t) did not set the truncation flag.
Fixed resize(0) error for etl::forward_list
Removed erroneous pointers in etl::unordered_map::begin()

===============================================================================
14.28.1
Optimisation of floating point specialisations of etl::cumulative_moving_average.

===============================================================================
14.28.0
Added runtime sample size specialisations to etl::cumulative_moving_average.

===============================================================================
14.27.1
Removed ETL_IF_CONSTEXPR from etl::message_timer 'tick()'

===============================================================================
14.27.0
ETL's random number generators are now non-polymorphic by default.
Define ETL_POLYMORPHIC_RANDOM to enable previous functionality.

===============================================================================
14.26.8
Moved global operators to ETL namespace.

===============================================================================
14.26.7
Compatibility changes for GCC v5.4.

===============================================================================
14.26.6
Added variadic parameters to observer notification.

===============================================================================
14.26.5
Fixed misplaced semicolon in error_handler.h

===============================================================================
14.26.4
FSM test example fix.

===============================================================================
14.26.3
A few small optimisations to binary.h

===============================================================================
14.26.2
Added #include <new> to files using 'placement new'.

===============================================================================
14.26.1
Simplified 'to_string' templates.

===============================================================================
14.26.0
Simplified message framework internal code.
Additional receive() virtual function overload taking destination id.
Removed is_bus() member function.

===============================================================================
14.25.0
Added variadic template versions of etl::largest, etl::largest_type,
etl::largest_alignment and etl::smallest

===============================================================================
14.24.2
Fixed bug in 'vector of pointers' move constructor.

===============================================================================
14.24.1
Added compile time functor version of 'create()'.

===============================================================================
14.24.0
Added 'delegate' and 'delegate_service'.

===============================================================================
14.23.1
Added missing 'cleanup' to string's resize() method.

===============================================================================
14.23.0
Added an optional secure mode to strings so that unused space will be cleared to zero
and also cleared on destruction.

===============================================================================
14.22.1
Modified memory functions so that they will not be optimised away.

===============================================================================
14.22.0
Added etl::memory_clear and etl::memory_set utility functions.
These functions will overwrite the memory allocated to the supplied object.

===============================================================================
14.21.0
Added variadic min and max functions.
etl::multimin
etl::multimin_compare
etl::multimin_iter
etl::multimin_iter_compare
etl::multimax
etl::multimax_compare
etl::multimax_iter
etl::multimax_iter_compare
C++11 only.

===============================================================================
14.20.0
Added etl::multi_array for multi-dimensional arrays.
C++11 only.

===============================================================================
14.19.0
Added 'emplace' to etl::optional.
C++03 & C++11 variants supplied depending on compiler support.

===============================================================================
14.18.4
Fixed bug in fractional part for floating point with leading zeros after the decimal point.

===============================================================================
14.18.3
Unified 'to string' API.

===============================================================================
14.18.2
Finalised 'to string'.

===============================================================================
14.18.1
Changed etl::format_sepc template to etl::basic_firmat_spec.
Created individual format_spec typedefs for each string type.

===============================================================================
14.18.0
Added etl::to_string, etl::to_wstring, etl::to_u16string and etl::to_u32string
plus formating support for integrals.

===============================================================================
14.17.0
Added C++11 variadic templates for etl::observer.

===============================================================================
14.16.0
Added C++11 variadic templates for etl::visitable and etl::visitor.

===============================================================================
14.15.0
Added external buffer support for vector.

===============================================================================
14.14.2
Modified 'truncated' to only be cleared on 'clear()' or 'assign()'.
Added assignment from zero terminated string pointer.

===============================================================================
14.14.1
Fixed bug where 'truncated' was not always set correctly for strings.

===============================================================================
14.14.0
Fixed string push_back() bug where the internal terminator was not updated.
Basic Conan package added.
Added const ref istring constructors.
Updated profiles for C++17.

===============================================================================
14.13.1
Modified etl::queue_spsc_locked parameters to 'const'.

===============================================================================
14.13.0
Added etl::queue_spsc_locked with injected locking functions.

===============================================================================
14.12.0
Enabled emplace functions for 'No STL'.

===============================================================================
14.11.3
Moved C++03 force macros to test profile.

===============================================================================
14.11.2
Fix inconsistent ETL_FILE definitions.

===============================================================================
14.11.1
Fix 'force C++03' macros leftover from testing.

===============================================================================
14.11.0
Added rvalue reference interfaces to forward_list.

===============================================================================
14.10.2
Fix for unordered_multimap, unordered_set and unordered_multiset insert and erase bug.

===============================================================================
14.10.1
Fix for unordered_map insert and erase bug.

===============================================================================
14.10.0
Added ETL_NOEXCEPT macros.
Added std::forward support to alternate STL utility header.

===============================================================================
14.9.0
Added constexpr constructors to string_view and array_view.

===============================================================================
14.8.2
Added missing #include "stl/interator.h" in frame_check_sequence.h

===============================================================================
14.8.1
Fixed bug for certain inserts in etl::vector

===============================================================================
14.8.0
Added etl::callback_service
Useful for abstracting the interrupt system from C++ handlers.

===============================================================================
14.7.2
Added #include <new> to message_router.h for improved cross platform compatibility.

===============================================================================
14.7.1
Rvalue reference C++-03/C++11 compatibility fix.

===============================================================================
14.7.0
Continuing updates for adding rvalue reference API to the containers.
etl::deque
etl::list
etl::vector

===============================================================================
14.6.1
Fixed bugs in etl::flat_map 'operator[]' and 'insert'.

===============================================================================
14.6.0
Added etl::scaled_rounding to allow selection of rounding algorithms when
emulating fixed point arithmetic with scaled integral values.

Added etl::cumulating_moving_average, implementing an algorithm for
calculating an average for a stream of samples. There are specialisations
for floating point and scaled integral sample types.

Added C++11 rvalue reference 'push' functions for etl::deque.

===============================================================================
14.5.1
Fixed deque pushes for literals.

===============================================================================
14.5.0
Added move algorithms and utility to 'alternate' STL.
Added rvalue reference API to etl::deque.

===============================================================================
14.4.0
Added C++03/C++11 emplace for deque, priority_queue, queues, stack, variant & vector.

===============================================================================
14.3.0
etl::forward_list supports shared pools.

===============================================================================
14.2.0
Added 'don't care current state' transition entry option.

===============================================================================
14.1.0
Added hash based random number generator

===============================================================================
14.0.0
The ETL is now 'all header'.

===============================================================================
13.0.0
Added bit stream serialiser/deserialiser

===============================================================================
12.1.1
Added random_pcg Permuted Congruential Generator

===============================================================================
12.0.1
Modified state_chart to accept recursive events.
Made start() virtual.

===============================================================================
12.0.0
Modified the API of etl::state_chart constructors.

===============================================================================
11.19.0
Removed push(void) push_back(void) and push_front(void) function for containers.

===============================================================================
11.18.0
Added CRC16 MODBUS

===============================================================================
11.17.1
Swapped event and current state parameters for transition constructor.

===============================================================================
11.17.0
Added etl::state_chart

===============================================================================
11.16.6
Fixed implementations of key_comp and value_comp for maps and sets

===============================================================================
11.16.5
Added 'ull' suffix to 64bit literals

===============================================================================
11.16.4
Fixed nullptr compatibility for ARM5 compiler.

===============================================================================
11.16.3
Fixed missing algorithms for No STL  option.
Improved Keil compatibility.

===============================================================================
11.15.1
io_port_test Fixed unaligned access error.
debug_count  Removed typed += & -= operators and replaced with templates.

===============================================================================
11.15.0
Added 'memory model' selection for queues to allow more efficient implementations.

Maximum queue sizes:
MEMORY_MODEL_SMALL   255 (254 for queue_spsc_atomic)
MEMORY_MODEL_MEDIUM  65535
MEMORY_MODEL_LARGE   2147483647
MEMORY_MODEL_HUGE    9223372036854775807

Fixed syntax errors highlighted by GCC v8

===============================================================================
11.14.2
Removed reference_flat_set & reference_flat_map reliance on equality.

===============================================================================
11.14.1
Removed flat_set & flat_map reliance on equality.

===============================================================================
11.14.0
Added tests for limited support for self insert for strings.
Added 'wipe_on_destruct' template class for secure wiping of objects on destruction.
Updated unique_ptr API.

===============================================================================
11.13.2
Protected destructor for some FSM classes.
Observer's remove_observer returns bool.

===============================================================================
11.13.1
Fixed vector of pointer typedefs

===============================================================================
11.13.0
Added specialisation for vector<const T*>

===============================================================================
11.12.2
Remove SFINAE from array_view.
Added default etl::less compare type appropriate map and set classes.
Moved non-template code in pvoidvector to cpp file.

===============================================================================
11.12.1
Made atomic load const for non STL vesions

===============================================================================
11.12.0
Renamed STATIC_ASSERT to ETL_STATIC_ASSERT
Removed non-conforming std::nullptr

===============================================================================
11.11.1
Compatibilty changes for Segger IDE, GCC & STLPort

===============================================================================
11.11.0
Compatibilty changes for Segger IDE, GCC & STLPort

===============================================================================
11.10.0
Merged CMake branch

===============================================================================
11.9.2
Fixed compile error when ETL_DEBUG_COUNT is not defined.

===============================================================================
11.9.1
Fix Github issue #73 (Timers)

===============================================================================
11.9.0
Added CRC32-C (Castagnoli)

===============================================================================
11.8.0
Added more binary utilities.
binary_fill
has_zero_byte
has_byte_n

===============================================================================
11.7.0
Modified header guards.
Added etl::type_select
Added etl::null_type

===============================================================================
11.6.0
Added capacity() to etl::queue
Prefixed max_size() and capacity() with ETL_CONSTEXPR in all queue types.

===============================================================================
11.5.0
Added etl::permutations and etl::combinations constant templates.

===============================================================================
11.4.0
Added improved atomics.
Added mutex
Added SPSC & MPPC queues

===============================================================================
11.3.0
Improved compatibility with 64 bit pltforms.

===============================================================================
11.2.0
Added std::initializer_list constructors to containers, if ETL_CPP11_SUPPORTED is set to 1

===============================================================================
11.0.1
Added reset() to etl::optional

===============================================================================
11.0.0
New directory structure.
C & CPP files in src/
H files in include/etl/

===============================================================================
10.21.2
Added version.h

===============================================================================
10.21.1
Removal of GCC warnings from variant.h.

===============================================================================
10.21.0
Completion of operator set for etl::optional
Removal of more GCC warnings when using -Wextra.

===============================================================================
10.20.0
Rewrite of debounce code to factor out commonality.
Made interrupt locks in C timer framework to match that of C++ version.
Improved etl::endianness. Added static functions.

===============================================================================
10.19.2
Fixed strict aliasing warnings for endianess.

===============================================================================
10.19.1
Fixed strict aliasing warnings for aligned storage.

===============================================================================
10.19.0
Added 'create' and 'destroy' functions to pools.
Modified class heirarchy.
etl::generic_pool is derived from on etl::ipool.
etl::pool is derived from etl::generic_pool.

===============================================================================
10.18.1
Reduced disable/enable time during function calls.

===============================================================================
10.18.0
Improvements to message and callback timer frameworks.
Reduced disable/enable time during function calls.
Added the option to use either atomic semaphores or interrupt enables to control access.

===============================================================================
10.17.0
Added emplace functions to etl::variant.

===============================================================================
10.16.1
Improved performance of emplace for value_type parameters.

===============================================================================
10.16.0
Added emplace member functions to flat_map, flat_multimap, flat_set and flat_multiset

===============================================================================
10.15.0
Added protected destructors to FSM & message_timer and code to message router packet destructor to choose correct method of destruction.

===============================================================================
10.14.0
Added variant_pool generator.

===============================================================================
10.13.0
There was no version 10.13.0

===============================================================================
10.12.0
Re-written to avoid 'undefined behavior' by allowing containers to be polymorphic or not base on a compile time macro.

===============================================================================
10.11.2
GCC compatibility changes.
===============================================================================
10.11.1
GCC compatibility changes.
===============================================================================
10.11.0
Added ETL_CONSTEXPR macro and applied to various functions.
Allows C++11 and above compilers to set functions as constexpr.

===============================================================================
10.10.0
Added array_wrapper

===============================================================================
10.9.0

Array view
  Added array_view.

===============================================================================
10.8.1

Pool
  Changed alignof to etl::alignment_of

===============================================================================
10.8.0

Added etl::variant_pool as a replacement for etl::factory.
Deprecated etl::factory

etl::forward_list
  Renamed include guard to avoid clash with list.

Removed factory from unit tests.

multimap & multiset
  Changed static const to enum.

hash & strings
  Removed default function template parameter value.

FSM
  Moved get_fsm_context() from public to protected in etl::state

Binary
  Added sign_extend functions with shift parameter.
  Added new binary.cpp for non-template functions.
  Added bit<> template constant
  Added bit enumerations

Debug count
  Added clear()

Type lookup
  Simplified codebase

Message router
  Added 'successor' member to allow implementation 'Chain Of Responsibility' pattern.

IO Ports
  Changes value() to read().
  Rewrite of classes to improve efficiency by removing iterator indirection step.
  Fixed inconsistencies in the dynamic IO port API.

Type traits
  Added 'conditional_integral_constant' to complement 'conditional'
